name: Publish to Sonatype

on:
  push:
    tags:
      - '*'
  repository_dispatch:
    types: [publish]

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'johnsonlee/sonatype-publish-plugin'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Publish to sonatype
      run: |
        echo "Create GPG private key"
        echo $GPG_KEY_ARMOR | base64 --decode > ${GITHUB_WORKSPACE}/secring.gpg
        echo "Publishing ${ORG_GRADLE_PROJECT_version} to Sonatype"
        ./gradlew -S --no-daemon initializeSonatypeStagingRepository
        ./gradlew -S --no-daemon clean publishToSonatype
        ./gradlew -S --no-daemon closeAndReleaseSonatypeStagingRepository
      env:
        ORG_GRADLE_PROJECT_version: ${{GITHUB_REF/refs\/tags\/v/}}
        ORG_GRADLE_PROJECT_signing.keyId: ${{ secrets.GPG_KEY_ID }}
        ORG_GRADLE_PROJECT_signing.password: ${{ secrets.GPG_PASSPHRASE }}
        ORG_GRADLE_PROJECT_signing.secretKeyRingFile: ${GITHUB_WORKSPACE}/secring.gpg
        GPG_KEY_ARMOR: ${{ secrets.GPG_KEY_ARMOR }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PACKAGE_GROUP: ${{ secrets.OSSRH_PACKAGE_GROUP }}
        OSSRH_STAGING_PROFILE_ID: ${{ secrets.OSSRH_STAGING_PROFILE_ID }}
